// <auto-generated />
using System;
using FamilyTree.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FamilyTree.Data.Migrations
{
    [DbContext(typeof(FamilyTreeContext))]
    partial class FamilyTreeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sitline.Training.FamilyTree.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Dog");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Friend", b =>
                {
                    b.Property<int>("FriendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FriendId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.FriendPerson", b =>
                {
                    b.Property<int>("FriendId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateJoined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("FriendId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("FriendPerson");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeathDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PairId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Vehicles.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Combustible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxSpeed")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wheels")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("PersonId");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Vehicle");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Vehicles.Car", b =>
                {
                    b.HasBaseType("Sitline.Training.FamilyTree.Vehicles.Vehicle");

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Vehicles.Motorcycle", b =>
                {
                    b.HasBaseType("Sitline.Training.FamilyTree.Vehicles.Vehicle");

                    b.HasDiscriminator().HasValue("Motorcycle");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Vehicles.Scooter", b =>
                {
                    b.HasBaseType("Sitline.Training.FamilyTree.Vehicles.Vehicle");

                    b.HasDiscriminator().HasValue("Scooter");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Vehicles.Train", b =>
                {
                    b.HasBaseType("Sitline.Training.FamilyTree.Vehicles.Vehicle");

                    b.HasDiscriminator().HasValue("Train");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Dog", b =>
                {
                    b.HasOne("Sitline.Training.FamilyTree.Person", null)
                        .WithOne("Dog")
                        .HasForeignKey("Sitline.Training.FamilyTree.Dog", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.FriendPerson", b =>
                {
                    b.HasOne("Sitline.Training.FamilyTree.Friend", null)
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sitline.Training.FamilyTree.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Vehicles.Vehicle", b =>
                {
                    b.HasOne("Sitline.Training.FamilyTree.Person", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Sitline.Training.FamilyTree.Person", b =>
                {
                    b.Navigation("Dog");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
